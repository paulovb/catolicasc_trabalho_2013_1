<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="aspx.cs" #>
<#@ assembly name="System.ComponentModel.DataAnnotations" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="System.Data.Linq" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.ComponentModel.DataAnnotations" #>
<#@ import namespace="System.Data.Linq.Mapping" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<# var viewDataType = (EnvDTE.CodeType) Model.ViewDataType; #>
<# var fullModelName = Model.Namespace+"."+Model.ViewDataTypeName; #>
using Microsoft.AspNet.FriendlyUrls.ModelBinding;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
<# if(!string.IsNullOrEmpty(Model.Namespace)) { #>
using <#= Model.Namespace #>;
<# } #>
<# if(!string.IsNullOrEmpty(Model.DBContextNamespace) && (Model.DBContextNamespace != Model.Namespace)) { #>
using <#= Model.DBContextNamespace #>;
<# } #>

namespace <#= Model.DefaultNamespace #>.<#=Model.ViewDataTypeName#>Actions
{
    public partial class Delete : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }

        // This is the Delete methd to delete the selected <#=Model.ViewDataTypeName#> item
        // USAGE: <asp:FormView DeleteMethod="DeleteItem">
        public void DeleteItem(int <#= Model.PrimaryKeyName #>)
        {
            using (var context = new <#= Model.DBContextType #>())
            {
                var item = context.<#= Model.PluralizedName #>.Find(<#= Model.PrimaryKeyName #>);

                if (item != null)
                {
                    context.<#= Model.PluralizedName #>.Remove(item);
                    context.SaveChanges();
                }
            }
            Response.Redirect("../Default");
        }

        // This is the Select methd to selects a single <#=Model.ViewDataTypeName#> item with the id
        // USAGE: <asp:FormView SelectMethod="GetItem">
        public <#= Model.ViewDataTypeName#> GetItem([FriendlyUrlSegmentsAttribute(0)]int? <#= Model.PrimaryKeyName #>)
        {
            if (<#= Model.PrimaryKeyName #> == null)
            {
                return null;
            }

            using (var context = new <#= Model.DBContextType #>())
            {
                return context.<#= Model.PluralizedName #>.Find(<#= Model.PrimaryKeyName #>);
            }
        }

        protected void ItemCommand(object sender, FormViewCommandEventArgs e)
        {
            if (e.CommandName.Equals("Cancel", StringComparison.OrdinalIgnoreCase))
            {
                Response.Redirect("../Default");
            }
        }
    }
}
