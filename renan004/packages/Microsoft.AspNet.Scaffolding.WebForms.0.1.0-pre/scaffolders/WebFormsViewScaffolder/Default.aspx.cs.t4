<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="aspx.cs" #>
<#@ assembly name="System.ComponentModel.DataAnnotations" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="System.Data.Linq" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.ComponentModel.DataAnnotations" #>
<#@ import namespace="System.Data.Linq.Mapping" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<# var viewDataType = (EnvDTE.CodeType) Model.ViewDataType; #>
<# var fullModelName = Model.Namespace+"."+Model.ViewDataTypeName; #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
<# if(!string.IsNullOrEmpty(Model.Namespace)) { #>
using <#= Model.Namespace #>;
<# } #>
<# if(!string.IsNullOrEmpty(Model.DBContextNamespace) && (Model.DBContextNamespace != Model.Namespace)) { #>
using <#= Model.DBContextNamespace #>;
<# } #>

namespace <#= Model.DefaultNamespace #>.<#=Model.ViewDataTypeName#>Actions
{
    public partial class Default : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }

        // Model binding method to get List of <#=Model.ViewDataTypeName#> entries
        // USAGE: <asp:ListView SelectMethod="GetData">
        public IQueryable<<#=Model.ViewDataTypeName#>> GetData()
        {
            var context = new <#= Model.DBContextType #>();

            return context.<#= Model.PluralizedName #>;
        }
    }
}
